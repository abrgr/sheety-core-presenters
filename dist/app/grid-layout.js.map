{"version":3,"sources":["../../src/app/grid-layout.js"],"names":["makeGridPresenter","presenter","GridPresenter","config","renderPresenter","rows","get","map","row","rowIdx","marginTop","marginBottom","cell","cellIdx","has","configKeyDocs"],"mappings":";;;;;kBAGwBA,iB;;AAHxB;;;;AACA;;;;AAEe,SAASA,iBAAT,CAA2BC,SAA3B,EAAsC;AACnD,MAAMC,gBAAgB,SAAhBA,aAAgB,OAAiC;AAAA,QAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,QAAtBC,eAAsB,QAAtBA,eAAsB;;AACrD,QAAMC,OAAOF,OAAOG,GAAP,CAAW,MAAX,CAAb;;AAEA,WACE;AAAA;AAAA,QAAK,WAAU,WAAf;AACGD,WAAKE,GAAL,CAAS,UAACC,GAAD,EAAMC,MAAN;AAAA,eACR;AAAA;AAAA;AACE,0BAAYA,MADd;AAEE,mBAAO,EAACC,WAAW,EAAZ,EAAgBC,cAAc,EAA9B,EAFT;AAGE,uBAAU,KAHZ;AAIGH,cAAID,GAAJ,CAAQ,UAACK,IAAD,EAAOC,OAAP;AAAA,mBACP;AAAA;AAAA;AACE,+BAAaA,OADf;AAEE,oCAAkBD,KAAKN,GAAL,CAAS,OAAT,CAFpB;AAGGM,mBAAKE,GAAL,CAAS,WAAT,IAAwBV,gBAAgBQ,KAAKN,GAAL,CAAS,WAAT,CAAhB,CAAxB,GAAiE;AAHpE,aADO;AAAA,WAAR;AAJH,SADQ;AAAA,OAAT;AADH,KADF;AAkBD,GArBD;;AAuBA,SAAOL,UAAU;AACfc,mBAAe,mBAAQ;AACrBV,YAAM;AADe,KAAR;AADA,GAAV,EAIJH,aAJI,CAAP;AAKD","file":"grid-layout.js","sourcesContent":["import React from 'react';\nimport { Map } from 'immutable';\n\nexport default function makeGridPresenter(presenter) {\n  const GridPresenter = ({ config, renderPresenter }) => {\n    const rows = config.get('rows');\n\n    return (\n      <div className=\"container\">\n        {rows.map((row, rowIdx) => (\n          <div\n            key={`row-${rowIdx}`}\n            style={{marginTop: 20, marginBottom: 20}}\n            className=\"row\">\n            {row.map((cell, cellIdx) => (\n              <div\n                key={`cell-${cellIdx}`}\n                className={`col-${cell.get('width')}`}>\n                {cell.has('presenter') ? renderPresenter(cell.get('presenter')) : null}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return presenter({\n    configKeyDocs: new Map({\n      rows: 'rows is an iterable of row iterables.  Each row iterable is composed of cell descriptors.  Each cell descriptor is an object/map like { width, presenter }, where width is a value from 1-12 and presenter is a presenter definition.'\n    })\n  })(GridPresenter);\n}\n"]}