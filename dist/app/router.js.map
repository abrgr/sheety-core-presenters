{"version":3,"sources":["../../src/app/router.js"],"names":["makeRouterPresenter","presenter","RouterPresenter","updateParams","match","props","nextProps","curProps","sheet","setCellValues","prevPath","path","nextPath","params","Object","keys","hasSetter","length","map","cellRef","fromA1Ref","param","value","cell","getCell","format","get","fromUserEnteredValue","config","renderPresenter","routes","route","bind","valueSeq"],"mappings":";;;;;;;;kBAKwBA,mB;;AALxB;;;;AACA;;AACA;;AACA;;;;;;;;;;AAEe,SAASA,mBAAT,CAA6BC,SAA7B,EAAwC;AAAA,MAC/CC,eAD+C;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAE/B;AAClB,aAAKC,YAAL,CAAkB,EAAEC,OAAO,EAAT,EAAlB,EAAiC,KAAKC,KAAtC;AACD;AAJkD;AAAA;AAAA,gDAMzBC,SANyB,EAMd;AACnC,aAAKH,YAAL,CAAkB,KAAKE,KAAvB,EAA8BC,SAA9B;AACD;AARkD;AAAA;AAAA,mCAUtCC,QAVsC,EAU5BD,SAV4B,EAUjB;AAAA,YACxBE,KADwB,GACCF,SADD,CACxBE,KADwB;AAAA,YACjBC,aADiB,GACCH,SADD,CACjBG,aADiB;;AAEhC,YAAMC,WAAWH,SAASH,KAAT,CAAeO,IAAhC;AACA,YAAMC,WAAWN,UAAUF,KAAV,CAAgBO,IAAjC;AACA,YAAME,SAASC,OAAOC,IAAP,CAAYT,UAAUO,MAAtB,CAAf;AACA,YAAMG,YAAY,CAAC,CAACH,OAAOI,MAA3B;;AAEA,YAAKD,aAAaJ,aAAaF,QAA/B,EAA0C;AACxCD,wBAAc,mBACZI,OAAOK,GAAP,CAAW,iBAAS;AAClB,gBAAMC,UAAU,qBAAQC,SAAR,CAAkBC,KAAlB,CAAhB;AACA,gBAAK,CAACF,OAAN,EAAgB;AACd,qBAAO,IAAP;AACD;;AAED,gBAAMG,QAAQhB,UAAUO,MAAV,CAAiBQ,KAAjB,CAAd;AACA,gBAAME,OAAOf,MAAMgB,OAAN,CAAcL,OAAd,CAAb;AACA,gBAAMM,SAASF,QAAQA,KAAKG,GAAL,CAAS,QAAT,CAAvB;AACA,mBAAO,CACLP,OADK,EAELM,SAASA,OAAOE,oBAAP,CAA4BL,KAA5B,CAAT,GAA8CA,KAFzC,CAAP;AAID,WAbD,CADY,CAAd;AAgBD;AACF;AAnCkD;AAAA;AAAA,+BAqC1C;AAAA,qBAC6B,KAAKjB,KADlC;AAAA,YACCuB,MADD,UACCA,MADD;AAAA,YACSC,eADT,UACSA,eADT;;AAEP,YAAMC,SAASF,OAAOF,GAAP,CAAW,QAAX,CAAf;;AAEA,eACE;AAAA;AAAA;AACE;AAAA;AAAA;AACGI,mBAAOZ,GAAP,CAAW,UAACjB,SAAD,EAAY8B,KAAZ;AAAA,qBACV;AACE,qBAAKA,KADP;AAEE,2BAFF;AAGE,sBAAMA,KAHR;AAIE,wBAAQF,gBAAgBG,IAAhB,CAAqB,IAArB,EAA2B/B,SAA3B,CAJV,GADU;AAAA,aAAX,EAMEgC,QANF;AADH;AADF,SADF;AAaD;AAtDkD;;AAAA;AAAA;;AAuDpD;;AAED,SAAOhC,YAAYC,eAAZ,CAAP;AACD","file":"router.js","sourcesContent":["import React, { Component } from 'react';\nimport { Map } from 'immutable';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { CellRef } from 'sheety-model';\n\nexport default function makeRouterPresenter(presenter) {\n  class RouterPresenter extends Component {\n    componentDidMount() {\n      this.updateParams({ match: {} }, this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this.updateParams(this.props, nextProps);\n    }\n\n    updateParams(curProps, nextProps) {\n      const { sheet, setCellValues } = nextProps;\n      const prevPath = curProps.match.path;\n      const nextPath = nextProps.match.path;\n      const params = Object.keys(nextProps.params);\n      const hasSetter = !!params.length;\n\n      if ( hasSetter && nextPath !== prevPath ) {\n        setCellValues(new Map(\n          params.map(param => {\n            const cellRef = CellRef.fromA1Ref(param);\n            if ( !cellRef ) {\n              return null;\n            }\n\n            const value = nextProps.params[param];\n            const cell = sheet.getCell(cellRef);\n            const format = cell && cell.get('format');\n            return [\n              cellRef, \n              format ? format.fromUserEnteredValue(value) : value\n            ];\n          })\n        ));\n      }\n    }\n\n    render() {\n      const { config, renderPresenter } = this.props;\n      const routes = config.get('routes');\n\n      return (\n        <BrowserRouter>\n          <Switch>\n            {routes.map((presenter, route) => (\n              <Route\n                key={route}\n                exact\n                path={route}\n                render={renderPresenter.bind(null, presenter)} />\n            )).valueSeq()}\n          </Switch>\n        </BrowserRouter>\n      );\n    }\n  };\n\n  return presenter()(RouterPresenter);\n}\n"]}