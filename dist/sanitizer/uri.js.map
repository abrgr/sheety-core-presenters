{"version":3,"sources":["../../src/sanitizer/uri.js"],"names":["URI","parse","uriStr","m","match","URI_RE_","nullIfAbsent","create","scheme","credentials","domain","port","path","query","fragment","uri","encodeIfExists2","URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_","encodeIfExists","toString","URI_DISALLOWED_IN_PATH_","setRawQuery","replace","encodeOne","setAllParameters","unescapedPart","encodeURIComponent","extra","encodeURI","ch","n","charCodeAt","charAt","normPath","PARENT_DIRECTORY_HANDLER","RegExp","PARENT_DIRECTORY_HANDLER_RE","EXTRA_PARENT_PATHS_RE","collapse_dots","p","r","q","resolve","baseUri","relativeUri","absoluteUri","clone","overridden","hasScheme","setRawScheme","getRawScheme","hasCredentials","setRawCredentials","getRawCredentials","hasDomain","setRawDomain","getRawDomain","hasPort","rawPath","getRawPath","simplifiedPath","setPort","getPort","absRawPath","slash","lastIndexOf","substring","setRawPath","hasQuery","getRawQuery","hasFragment","setRawFragment","getRawFragment","rawScheme","rawCredentials","rawDomain","rawQuery","rawFragment","scheme_","credentials_","domain_","port_","path_","query_","fragment_","paramCache_","prototype","out","push","join","getScheme","decodeURIComponent","toLowerCase","setScheme","newScheme","getCredentials","setCredentials","newCredentials","getDomain","setDomain","newDomain","newPort","Number","Error","getPath","setPath","newPath","String","test","hasPath","getQuery","setQuery","newQuery","params","Array","Object","call","newParams","i","k","v","queryBuf","separator","j","length","checkParameterCache_","cgiParams","split","setParameterValues","key","values","newValueIndex","pc","removeParameter","getAllParameters","slice","getParameterValues","paramNameUnescaped","getParameterMap","paramMap","value","getParameterValue","getFragment","setFragment","newFragment","matchPart","utils","mimeTypeOf","uriObj","base"],"mappings":"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","file":"uri.js","sourcesContent":["/* eslint-disable */\n\n//\n// FROM: https://github.com/google/caja/blob/1056be89dad487f9178d89f462fe5cb207c7e604/src/com/google/caja/plugin/uri.js\n//\n\n// Copyright (C) 2010 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview\n * Implements RFC 3986 for parsing/formatting URIs.\n *\n * @author mikesamuel@gmail.com\n * \\@provides URI\n * \\@overrides window\n */\n\nvar URI = (function () {\n\n/**\n * creates a uri from the string form.  The parser is relaxed, so special\n * characters that aren't escaped but don't cause ambiguities will not cause\n * parse failures.\n *\n * @return {URI|null}\n */\nfunction parse(uriStr) {\n  var m = ('' + uriStr).match(URI_RE_);\n  if (!m) { return null; }\n  return new URI(\n      nullIfAbsent(m[1]),\n      nullIfAbsent(m[2]),\n      nullIfAbsent(m[3]),\n      nullIfAbsent(m[4]),\n      nullIfAbsent(m[5]),\n      nullIfAbsent(m[6]),\n      nullIfAbsent(m[7]));\n}\n\n\n/**\n * creates a uri from the given parts.\n *\n * @param scheme {string} an unencoded scheme such as \"http\" or null\n * @param credentials {string} unencoded user credentials or null\n * @param domain {string} an unencoded domain name or null\n * @param port {number} a port number in [1, 32768].\n *    -1 indicates no port, as does null.\n * @param path {string} an unencoded path\n * @param query {Array.<string>|string|null} a list of unencoded cgi\n *   parameters where even values are keys and odds the corresponding values\n *   or an unencoded query.\n * @param fragment {string} an unencoded fragment without the \"#\" or null.\n * @return {URI}\n */\nfunction create(scheme, credentials, domain, port, path, query, fragment) {\n  var uri = new URI(\n      encodeIfExists2(scheme, URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_),\n      encodeIfExists2(\n          credentials, URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_),\n      encodeIfExists(domain),\n      port > 0 ? port.toString() : null,\n      encodeIfExists2(path, URI_DISALLOWED_IN_PATH_),\n      null,\n      encodeIfExists(fragment));\n  if (query) {\n    if ('string' === typeof query) {\n      uri.setRawQuery(query.replace(/[^?&=0-9A-Za-z_\\-~.%]/g, encodeOne));\n    } else {\n      uri.setAllParameters(query);\n    }\n  }\n  return uri;\n}\nfunction encodeIfExists(unescapedPart) {\n  if ('string' === typeof unescapedPart) {\n    return encodeURIComponent(unescapedPart);\n  }\n  return null;\n};\n/**\n * if unescapedPart is non null, then escapes any characters in it that aren't\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param unescapedPart {string}\n * @param extra {RegExp} a character set of characters in [\\01-\\177].\n * @return {string|null} null iff unescapedPart == null.\n */\nfunction encodeIfExists2(unescapedPart, extra) {\n  if ('string' == typeof unescapedPart) {\n    return encodeURI(unescapedPart).replace(extra, encodeOne);\n  }\n  return null;\n};\n/** converts a character in [\\01-\\177] to its url encoded equivalent. */\nfunction encodeOne(ch) {\n  var n = ch.charCodeAt(0);\n  return '%' + '0123456789ABCDEF'.charAt((n >> 4) & 0xf) +\n      '0123456789ABCDEF'.charAt(n & 0xf);\n}\n\n/**\n * {@updoc\n *  $ normPath('foo/./bar')\n *  # 'foo/bar'\n *  $ normPath('./foo')\n *  # 'foo'\n *  $ normPath('foo/.')\n *  # 'foo'\n *  $ normPath('foo//bar')\n *  # 'foo/bar'\n * }\n */\nfunction normPath(path) {\n  return path.replace(/(^|\\/)\\.(?:\\/|$)/g, '$1').replace(/\\/{2,}/g, '/');\n}\n\nvar PARENT_DIRECTORY_HANDLER = new RegExp(\n    ''\n    // A path break\n    + '(/|^)'\n    // followed by a non .. path element\n    // (cannot be . because normPath is used prior to this RegExp)\n    + '(?:[^./][^/]*|\\\\.{2,}(?:[^./][^/]*)|\\\\.{3,}[^/]*)'\n    // followed by .. followed by a path break.\n    + '/\\\\.\\\\.(?:/|$)');\n\nvar PARENT_DIRECTORY_HANDLER_RE = new RegExp(PARENT_DIRECTORY_HANDLER);\n\nvar EXTRA_PARENT_PATHS_RE = /^(?:\\.\\.\\/)*(?:\\.\\.$)?/;\n\n/**\n * Normalizes its input path and collapses all . and .. sequences except for\n * .. sequences that would take it above the root of the current parent\n * directory.\n * {@updoc\n *  $ collapse_dots('foo/../bar')\n *  # 'bar'\n *  $ collapse_dots('foo/./bar')\n *  # 'foo/bar'\n *  $ collapse_dots('foo/../bar/./../../baz')\n *  # 'baz'\n *  $ collapse_dots('../foo')\n *  # '../foo'\n *  $ collapse_dots('../foo').replace(EXTRA_PARENT_PATHS_RE, '')\n *  # 'foo'\n * }\n */\nfunction collapse_dots(path) {\n  if (path === null) { return null; }\n  var p = normPath(path);\n  // Only /../ left to flatten\n  var r = PARENT_DIRECTORY_HANDLER_RE;\n  // We replace with $1 which matches a / before the .. because this\n  // guarantees that:\n  // (1) we have at most 1 / between the adjacent place,\n  // (2) always have a slash if there is a preceding path section, and\n  // (3) we never turn a relative path into an absolute path.\n  for (var q; (q = p.replace(r, '$1')) != p; p = q) {};\n  return p;\n}\n\n/**\n * resolves a relative url string to a base uri.\n * @return {URI}\n */\nfunction resolve(baseUri, relativeUri) {\n  // there are several kinds of relative urls:\n  // 1. //foo - replaces everything from the domain on.  foo is a domain name\n  // 2. foo - replaces the last part of the path, the whole query and fragment\n  // 3. /foo - replaces the the path, the query and fragment\n  // 4. ?foo - replace the query and fragment\n  // 5. #foo - replace the fragment only\n\n  var absoluteUri = baseUri.clone();\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden = relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setRawScheme(relativeUri.getRawScheme());\n  } else {\n    overridden = relativeUri.hasCredentials();\n  }\n\n  if (overridden) {\n    absoluteUri.setRawCredentials(relativeUri.getRawCredentials());\n  } else {\n    overridden = relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setRawDomain(relativeUri.getRawDomain());\n  } else {\n    overridden = relativeUri.hasPort();\n  }\n\n  var rawPath = relativeUri.getRawPath();\n  var simplifiedPath = collapse_dots(rawPath);\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n    simplifiedPath = simplifiedPath\n        && simplifiedPath.replace(EXTRA_PARENT_PATHS_RE, '');\n  } else {\n    overridden = !!rawPath;\n    if (overridden) {\n      // resolve path properly\n      if (simplifiedPath.charCodeAt(0) !== 0x2f /* / */) {  // path is relative\n        var absRawPath = collapse_dots(absoluteUri.getRawPath() || '')\n            .replace(EXTRA_PARENT_PATHS_RE, '');\n        var slash = absRawPath.lastIndexOf('/') + 1;\n        simplifiedPath = collapse_dots(\n            (slash ? absRawPath.substring(0, slash) : '')\n            + collapse_dots(rawPath))\n            .replace(EXTRA_PARENT_PATHS_RE, '');\n      }\n    } else {\n      simplifiedPath = simplifiedPath\n          && simplifiedPath.replace(EXTRA_PARENT_PATHS_RE, '');\n      if (simplifiedPath !== rawPath) {\n        absoluteUri.setRawPath(simplifiedPath);\n      }\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setRawPath(simplifiedPath);\n  } else {\n    overridden = relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setRawQuery(relativeUri.getRawQuery());\n  } else {\n    overridden = relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setRawFragment(relativeUri.getRawFragment());\n  }\n\n  return absoluteUri;\n}\n\n/**\n * a mutable URI.\n *\n * This class contains setters and getters for the parts of the URI.\n * The <tt>getXYZ</tt>/<tt>setXYZ</tt> methods return the decoded part -- so\n * <code>uri.parse('/foo%20bar').getPath()</code> will return the decoded path,\n * <tt>/foo bar</tt>.\n *\n * <p>The raw versions of fields are available too.\n * <code>uri.parse('/foo%20bar').getRawPath()</code> will return the raw path,\n * <tt>/foo%20bar</tt>.  Use the raw setters with care, since\n * <code>URI::toString</code> is not guaranteed to return a valid url if a\n * raw setter was used.\n *\n * <p>All setters return <tt>this</tt> and so may be chained, a la\n * <code>uri.parse('/foo').setFragment('part').toString()</code>.\n *\n * <p>You should not use this constructor directly -- please prefer the factory\n * functions {@link uri.parse}, {@link uri.create}, {@link uri.resolve}\n * instead.</p>\n *\n * <p>The parameters are all raw (assumed to be properly escaped) parts, and\n * any (but not all) may be null.  Undefined is not allowed.</p>\n *\n * @constructor\n */\nfunction URI(\n    rawScheme,\n    rawCredentials, rawDomain, port,\n    rawPath, rawQuery, rawFragment) {\n  this.scheme_ = rawScheme;\n  this.credentials_ = rawCredentials;\n  this.domain_ = rawDomain;\n  this.port_ = port;\n  this.path_ = rawPath;\n  this.query_ = rawQuery;\n  this.fragment_ = rawFragment;\n  /**\n   * @type {Array|null}\n   */\n  this.paramCache_ = null;\n}\n\n/** returns the string form of the url. */\nURI.prototype.toString = function () {\n  var out = [];\n  if (null !== this.scheme_) { out.push(this.scheme_, ':'); }\n  if (null !== this.domain_) {\n    out.push('//');\n    if (null !== this.credentials_) { out.push(this.credentials_, '@'); }\n    out.push(this.domain_);\n    if (null !== this.port_) { out.push(':', this.port_.toString()); }\n  }\n  if (null !== this.path_) { out.push(this.path_); }\n  if (null !== this.query_) { out.push('?', this.query_); }\n  if (null !== this.fragment_) { out.push('#', this.fragment_); }\n  return out.join('');\n};\n\nURI.prototype.clone = function () {\n  return new URI(this.scheme_, this.credentials_, this.domain_, this.port_,\n                 this.path_, this.query_, this.fragment_);\n};\n\nURI.prototype.getScheme = function () {\n  // HTML5 spec does not require the scheme to be lowercased but\n  // all common browsers except Safari lowercase the scheme.\n  return this.scheme_ && decodeURIComponent(this.scheme_).toLowerCase();\n};\nURI.prototype.getRawScheme = function () {\n  return this.scheme_;\n};\nURI.prototype.setScheme = function (newScheme) {\n  this.scheme_ = encodeIfExists2(\n      newScheme, URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_);\n  return this;\n};\nURI.prototype.setRawScheme = function (newScheme) {\n  this.scheme_ = newScheme ? newScheme : null;\n  return this;\n};\nURI.prototype.hasScheme = function () {\n  return null !== this.scheme_;\n};\n\n\nURI.prototype.getCredentials = function () {\n  return this.credentials_ && decodeURIComponent(this.credentials_);\n};\nURI.prototype.getRawCredentials = function () {\n  return this.credentials_;\n};\nURI.prototype.setCredentials = function (newCredentials) {\n  this.credentials_ = encodeIfExists2(\n      newCredentials, URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_);\n\n  return this;\n};\nURI.prototype.setRawCredentials = function (newCredentials) {\n  this.credentials_ = newCredentials ? newCredentials : null;\n  return this;\n};\nURI.prototype.hasCredentials = function () {\n  return null !== this.credentials_;\n};\n\n\nURI.prototype.getDomain = function () {\n  return this.domain_ && decodeURIComponent(this.domain_);\n};\nURI.prototype.getRawDomain = function () {\n  return this.domain_;\n};\nURI.prototype.setDomain = function (newDomain) {\n  return this.setRawDomain(newDomain && encodeURIComponent(newDomain));\n};\nURI.prototype.setRawDomain = function (newDomain) {\n  this.domain_ = newDomain ? newDomain : null;\n  // Maintain the invariant that paths must start with a slash when the URI\n  // is not path-relative.\n  return this.setRawPath(this.path_);\n};\nURI.prototype.hasDomain = function () {\n  return null !== this.domain_;\n};\n\n\nURI.prototype.getPort = function () {\n  return this.port_ && decodeURIComponent(this.port_);\n};\nURI.prototype.setPort = function (newPort) {\n  if (newPort) {\n    newPort = Number(newPort);\n    if (newPort !== (newPort & 0xffff)) {\n      throw new Error('Bad port number ' + newPort);\n    }\n    this.port_ = '' + newPort;\n  } else {\n    this.port_ = null;\n  }\n  return this;\n};\nURI.prototype.hasPort = function () {\n  return null !== this.port_;\n};\n\n\nURI.prototype.getPath = function () {\n  return this.path_ && decodeURIComponent(this.path_);\n};\nURI.prototype.getRawPath = function () {\n  return this.path_;\n};\nURI.prototype.setPath = function (newPath) {\n  return this.setRawPath(encodeIfExists2(newPath, URI_DISALLOWED_IN_PATH_));\n};\nURI.prototype.setRawPath = function (newPath) {\n  if (newPath) {\n    newPath = String(newPath);\n    this.path_ = \n      // Paths must start with '/' unless this is a path-relative URL.\n      (!this.domain_ || /^\\//.test(newPath)) ? newPath : '/' + newPath;\n  } else {\n    this.path_ = null;\n  }\n  return this;\n};\nURI.prototype.hasPath = function () {\n  return null !== this.path_;\n};\n\n\nURI.prototype.getQuery = function () {\n  // From http://www.w3.org/Addressing/URL/4_URI_Recommentations.html\n  // Within the query string, the plus sign is reserved as shorthand notation\n  // for a space.\n  return this.query_ && decodeURIComponent(this.query_).replace(/\\+/g, ' ');\n};\nURI.prototype.getRawQuery = function () {\n  return this.query_;\n};\nURI.prototype.setQuery = function (newQuery) {\n  this.paramCache_ = null;\n  this.query_ = encodeIfExists(newQuery);\n  return this;\n};\nURI.prototype.setRawQuery = function (newQuery) {\n  this.paramCache_ = null;\n  this.query_ = newQuery ? newQuery : null;\n  return this;\n};\nURI.prototype.hasQuery = function () {\n  return null !== this.query_;\n};\n\n/**\n * sets the query given a list of strings of the form\n * [ key0, value0, key1, value1, ... ].\n *\n * <p><code>uri.setAllParameters(['a', 'b', 'c', 'd']).getQuery()</code>\n * will yield <code>'a=b&c=d'</code>.\n */\nURI.prototype.setAllParameters = function (params) {\n  if (typeof params === 'object') {\n    if (!(params instanceof Array)\n        && (params instanceof Object\n            || Object.prototype.toString.call(params) !== '[object Array]')) {\n      var newParams = [];\n      var i = -1;\n      for (var k in params) {\n        var v = params[k];\n        if ('string' === typeof v) {\n          newParams[++i] = k;\n          newParams[++i] = v;\n        }\n      }\n      params = newParams;\n    }\n  }\n  this.paramCache_ = null;\n  var queryBuf = [];\n  var separator = '';\n  for (var j = 0; j < params.length;) {\n    var k = params[j++];\n    var v = params[j++];\n    queryBuf.push(separator, encodeURIComponent(k.toString()));\n    separator = '&';\n    if (v) {\n      queryBuf.push('=', encodeURIComponent(v.toString()));\n    }\n  }\n  this.query_ = queryBuf.join('');\n  return this;\n};\nURI.prototype.checkParameterCache_ = function () {\n  if (!this.paramCache_) {\n    var q = this.query_;\n    if (!q) {\n      this.paramCache_ = [];\n    } else {\n      var cgiParams = q.split(/[&\\?]/);\n      var out = [];\n      var k = -1;\n      for (var i = 0; i < cgiParams.length; ++i) {\n        var m = cgiParams[i].match(/^([^=]*)(?:=(.*))?$/);\n        // From http://www.w3.org/Addressing/URL/4_URI_Recommentations.html\n        // Within the query string, the plus sign is reserved as shorthand\n        // notation for a space.\n        out[++k] = decodeURIComponent(m[1]).replace(/\\+/g, ' ');\n        out[++k] = decodeURIComponent(m[2] || '').replace(/\\+/g, ' ');\n      }\n      this.paramCache_ = out;\n    }\n  }\n};\n/**\n * sets the values of the named cgi parameters.\n *\n * <p>So, <code>uri.parse('foo?a=b&c=d&e=f').setParameterValues('c', ['new'])\n * </code> yields <tt>foo?a=b&c=new&e=f</tt>.</p>\n *\n * @param key {string}\n * @param values {Array.<string>} the new values.  If values is a single string\n *   then it will be treated as the sole value.\n */\nURI.prototype.setParameterValues = function (key, values) {\n  // be nice and avoid subtle bugs where [] operator on string performs charAt\n  // on some browsers and crashes on IE\n  if (typeof values === 'string') {\n    values = [ values ];\n  }\n\n  this.checkParameterCache_();\n  var newValueIndex = 0;\n  var pc = this.paramCache_;\n  var params = [];\n  for (var i = 0, k = 0; i < pc.length; i += 2) {\n    if (key === pc[i]) {\n      if (newValueIndex < values.length) {\n        params.push(key, values[newValueIndex++]);\n      }\n    } else {\n      params.push(pc[i], pc[i + 1]);\n    }\n  }\n  while (newValueIndex < values.length) {\n    params.push(key, values[newValueIndex++]);\n  }\n  this.setAllParameters(params);\n  return this;\n};\nURI.prototype.removeParameter = function (key) {\n  return this.setParameterValues(key, []);\n};\n/**\n * returns the parameters specified in the query part of the uri as a list of\n * keys and values like [ key0, value0, key1, value1, ... ].\n *\n * @return {Array.<string>}\n */\nURI.prototype.getAllParameters = function () {\n  this.checkParameterCache_();\n  return this.paramCache_.slice(0, this.paramCache_.length);\n};\n/**\n * returns the value<b>s</b> for a given cgi parameter as a list of decoded\n * query parameter values.\n * @return {Array.<string>}\n */\nURI.prototype.getParameterValues = function (paramNameUnescaped) {\n  this.checkParameterCache_();\n  var values = [];\n  for (var i = 0; i < this.paramCache_.length; i += 2) {\n    if (paramNameUnescaped === this.paramCache_[i]) {\n      values.push(this.paramCache_[i + 1]);\n    }\n  }\n  return values;\n};\n/**\n * returns a map of cgi parameter names to (non-empty) lists of values.\n * @return {Object.<string,Array.<string>>}\n */\nURI.prototype.getParameterMap = function (paramNameUnescaped) {\n  this.checkParameterCache_();\n  var paramMap = {};\n  for (var i = 0; i < this.paramCache_.length; i += 2) {\n    var key = this.paramCache_[i++],\n      value = this.paramCache_[i++];\n    if (!(key in paramMap)) {\n      paramMap[key] = [value];\n    } else {\n      paramMap[key].push(value);\n    }\n  }\n  return paramMap;\n};\n/**\n * returns the first value for a given cgi parameter or null if the given\n * parameter name does not appear in the query string.\n * If the given parameter name does appear, but has no '<tt>=</tt>' following\n * it, then the empty string will be returned.\n * @return {string|null}\n */\nURI.prototype.getParameterValue = function (paramNameUnescaped) {\n  this.checkParameterCache_();\n  for (var i = 0; i < this.paramCache_.length; i += 2) {\n    if (paramNameUnescaped === this.paramCache_[i]) {\n      return this.paramCache_[i + 1];\n    }\n  }\n  return null;\n};\n\nURI.prototype.getFragment = function () {\n  return this.fragment_ && decodeURIComponent(this.fragment_);\n};\nURI.prototype.getRawFragment = function () {\n  return this.fragment_;\n};\nURI.prototype.setFragment = function (newFragment) {\n  this.fragment_ = newFragment ? encodeURIComponent(newFragment) : null;\n  return this;\n};\nURI.prototype.setRawFragment = function (newFragment) {\n  this.fragment_ = newFragment ? newFragment : null;\n  return this;\n};\nURI.prototype.hasFragment = function () {\n  return null !== this.fragment_;\n};\n\nfunction nullIfAbsent(matchPart) {\n  return ('string' == typeof matchPart) && (matchPart.length > 0)\n         ? matchPart\n         : null;\n}\n\n\n\n\n/**\n * a regular expression for breaking a URI into its component parts.\n *\n * <p>http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234 says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * <p>The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * <p>The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * <p>msamuel: I have modified the regular expression slightly to expose the\n * credentials, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       credentials -\\\n *    $3 = www.ics.uci.edu   domain       | authority\n *    $4 = <undefined>       port        -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n */\nvar URI_RE_ = new RegExp(\n      \"^\" +\n      \"(?:\" +\n        \"([^:/?#]+)\" +         // scheme\n      \":)?\" +\n      \"(?://\" +\n        \"(?:([^/?#]*)@)?\" +    // credentials\n        \"([^/?#:@]*)\" +        // domain\n        \"(?::([0-9]+))?\" +     // port\n      \")?\" +\n      \"([^?#]+)?\" +            // path\n      \"(?:\\\\?([^#]*))?\" +      // query\n      \"(?:#(.*))?\" +           // fragment\n      \"$\"\n      );\n\nvar URI_DISALLOWED_IN_SCHEME_OR_CREDENTIALS_ = /[#\\/\\?@]/g;\nvar URI_DISALLOWED_IN_PATH_ = /[\\#\\?]/g;\n\nURI.parse = parse;\nURI.create = create;\nURI.resolve = resolve;\nURI.collapse_dots = collapse_dots;  // Visible for testing.\n\n// lightweight string-based api for loadModuleMaker\nURI.utils = {\n  mimeTypeOf: function (uri) {\n    var uriObj = parse(uri);\n    if (/\\.html$/.test(uriObj.getPath())) {\n      return 'text/html';\n    } else {\n      return 'application/javascript';\n    }\n  },\n  resolve: function (base, uri) {\n    if (base) {\n      return resolve(parse(base), parse(uri)).toString();\n    } else {\n      return '' + uri;\n    }\n  }\n};\n\n\nreturn URI;\n})();\n\nexport default URI;\n"]}