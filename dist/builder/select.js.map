{"version":3,"sources":["../../src/builder/select.js"],"names":["makeSelectPresenter","presenter","SelectPresenter","mapData","mapDataQuery","setCellValues","value","get","mapOptions","options","Array","isArray","valueCell","evt","cellRef","CellRef","fromA1Ref","cell","sheet","getCell","format","Map","fromUserEnteredValue","target","newVal","map","optionValue","optionLabel","schema"],"mappings":";;;;;;;;kBAGwBA,mB;;AAHxB;;;;AACA;;;;AAEe,SAASA,mBAAT,CAA6BC,SAA7B,EAAwC;AACrD,MAAMC,kBAAkB,SAAlBA,eAAkB,OAA8C;AAAA,QAA3CC,OAA2C,QAA3CA,OAA2C;AAAA,QAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,QAApBC,aAAoB,QAApBA,aAAoB;;AACpE,QAAMC,QAAQH,QAAQI,GAAR,CAAY,OAAZ,EAAqB,IAArB,CAAd;AACA,QAAMC,aAAaL,QAAQI,GAAR,CAAY,SAAZ,EAAuB,EAAvB,CAAnB;AACA;AACA,QAAME,UAAUC,MAAMC,OAAN,CAAcH,UAAd,IAA4BA,UAA5B,GAAyC,EAAzD;AACA,QAAMI,YAAYR,aAAaG,GAAb,CAAiB,OAAjB,EAA0B,EAA1B,CAAlB;;AAEA,WACE;AAAA;AAAA;AACE,kBAAU,kBAACM,GAAD,EAAS;AACjB,cAAMC,UAAUC,QAAQC,SAAR,CAAkBJ,SAAlB,CAAhB;AACA,cAAMK,OAAOC,MAAMC,OAAN,CAAcL,OAAd,CAAb;AACA,cAAMM,SAASH,QAAQA,KAAKV,GAAL,CAAS,QAAT,CAAvB;AACAF,wBAAc,IAAIgB,GAAJ,CAAQ,CACpB,CACEP,OADF,EAEEM,SAASA,OAAOE,oBAAP,CAA4BT,IAAIU,MAAJ,CAAWjB,KAAvC,CAAT,GAAyDkB,MAF3D,CADoB,CAAR,CAAd;AAMD,SAXH;AAYE,eAAOlB,KAZT;AAaGG,cAAQgB,GAAR,CAAY;AAAA;AAAA,YAAEC,WAAF;AAAA,YAAeC,WAAf;;AAAA,eACX;AAAA;AAAA;AACE,mBAAOD,WADT;AAEGC;AAFH,SADW;AAAA,OAAZ;AAbH,KADF;AAsBD,GA7BD;;AA+BA,SAAO1B,UAAU;AACf2B,YAAQ,uBAAO;AACb,iBAAW,gCADE;AAEb,aAAO,0DAFM;AAGb,eAAS,QAHI;AAIb,qBAAe,0KAJF;AAKb,cAAQ,QALK;AAMb,oBAAc;AACZ,cAAM;AACJ,mBAAS,YADL;AAEJ,yBAAe,qEAFX;AAGJ,kBAAQ,QAHJ;AAIJ,qBAAW;AAJP,SADM;AAOZ,gBAAQ;AACN,mBAAS,QADH;AAEN,qBAAW;AAFL,SAPI;AAWZ,mBAAW;AACT,mBAAS,SADA;AAET,yBAAe,yDAFN;AAGT,kBAAQ,QAHC;AAIT,qBAAW,EAJF;AAKT,wBAAc;AACZ,uBAAW;AACT,uBAAS,SADA;AAET,6BAAe,6CAFN;AAGT,yBAAW,EAHF;AAIT,sBAAQ,OAJC;AAKT,uBAAS;AACP,wBAAQ,OADD;AAEP,yBAAS,CACP;AACE,2BAAS,cADX;AAEE,iCAAe,mEAFjB;AAGE,0BAAQ;AAHV,iBADO,EAMP;AACE,2BAAS,cADX;AAEE,iCAAe,qDAFjB;AAGE,0BAAQ;AAHV,iBANO;AAFF;AALA,aADC;AAsBZ,qBAAS;AACP,uBAAS,OADF;AAEP,6BAAe,mDAFR;AAGP,yBAAW,EAHJ;AAIP,sBAAQ;AAJD;AAtBG;AALL;AAXC;AAND,KAAP;AADO,GAAV,EAuDJ1B,eAvDI,CAAP;AAwDD","file":"select.js","sourcesContent":["import React from 'react';\nimport { fromJS } from 'immutable';\n\nexport default function makeSelectPresenter(presenter) {\n  const SelectPresenter = ({ mapData, mapDataQuery, setCellValues }) => {\n    const value = mapData.get('value', null);\n    const mapOptions = mapData.get('options', []);\n    // so we can handle errors in sheets\n    const options = Array.isArray(mapOptions) ? mapOptions : [];\n    const valueCell = mapDataQuery.get('value', '');\n\n    return (\n      <select\n        onChange={(evt) => {\n          const cellRef = CellRef.fromA1Ref(valueCell)\n          const cell = sheet.getCell(cellRef);\n          const format = cell && cell.get('format');\n          setCellValues(new Map([\n            [\n              cellRef,\n              format ? format.fromUserEnteredValue(evt.target.value) : newVal\n            ]\n          ]))\n        }}\n        value={value}>\n        {options.map(([optionValue, optionLabel]) => (\n          <option\n            value={optionValue}>\n            {optionLabel}\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  return presenter({\n    schema: fromJS({\n      \"$schema\": \"http://json-schema.org/schema#\",\n      \"$id\": \"http://sheetyapp.com/schemas/core-presenters/select.json\",\n      \"title\": \"Select\",\n      \"description\": \"The Select Presenter allows you to show users a dropdown with options populated from your spreadsheet and a selected value that is synced to a cell in your spreadsheet.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Identifier\",\n          \"description\": \"A unique identifier for this presenter.  Used for analytics events.\",\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"type\": {\n          \"const\": \"select\",\n          \"default\": \"select\"\n        },\n        \"mapData\": {\n          \"title\": \"Options\",\n          \"description\": \"Formulas that will be evaluated against the spreadsheet\",\n          \"type\": \"object\",\n          \"default\": {},\n          \"properties\": {\n            \"options\": {\n              \"title\": \"Options\",\n              \"description\": \"Values and labels for all presented options\",\n              \"default\": [],\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"array\",\n                \"items\": [\n                  {\n                    \"title\": \"Option value\",\n                    \"description\": \"When this option is selected, this is the value that will be used\",\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"title\": \"Option label\",\n                    \"description\": \"This is the label shown to the user for this option\",\n                    \"type\": \"string\"\n                  }\n                ]\n              }\n            },\n            \"value\": {\n              \"title\": \"Value\",\n              \"description\": \"The cell to read and write the selected value to.\",\n              \"default\": \"\",\n              \"$ref\": \"http://sheetyapp.com/schemas/core-presenters/configurers/cell.json\"\n            }\n          }\n        }\n      }\n    })\n  })(SelectPresenter);\n}\n"]}