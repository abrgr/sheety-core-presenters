{"version":3,"sources":["../../src/builder/select.js"],"names":["makeSelectPresenter","presenter","SelectPresenter","config","mapData","calc","setCellValues","valueCell","get","options","value","evaluateFormula","evt","cellRef","CellRef","fromA1Ref","cell","sheet","getCell","format","Map","fromUserEnteredValue","target","newVal","map","optionValue","optionLabel","schema"],"mappings":";;;;;;;;kBAGwBA,mB;;AAHxB;;;;AACA;;;;AAEe,SAASA,mBAAT,CAA6BC,SAA7B,EAAwC;AACrD,MAAMC,kBAAkB,SAAlBA,eAAkB,OAA8C;AAAA,QAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,QAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,QAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,QAApBC,aAAoB,QAApBA,aAAoB;;AACpE,QAAMC,YAAYJ,OAAOK,GAAP,CAAW,OAAX,CAAlB;AACA,QAAMC,UAAUL,QAAQI,GAAR,CAAY,SAAZ,EAAuB,EAAvB,CAAhB;AACA,QAAME,QAAQL,KAAKM,eAAL,CAAqBJ,SAArB,CAAd;;AAEA,WACE;AAAA;AAAA;AACE,kBAAU,kBAACK,GAAD,EAAS;AACjB,cAAMC,UAAUC,QAAQC,SAAR,CAAkBR,SAAlB,CAAhB;AACA,cAAMS,OAAOC,MAAMC,OAAN,CAAcL,OAAd,CAAb;AACA,cAAMM,SAASH,QAAQA,KAAKR,GAAL,CAAS,QAAT,CAAvB;AACAF,wBAAc,IAAIc,GAAJ,CAAQ,CACpB,CACEP,OADF,EAEEM,SAASA,OAAOE,oBAAP,CAA4BT,IAAIU,MAAJ,CAAWZ,KAAvC,CAAT,GAAyDa,MAF3D,CADoB,CAAR,CAAd;AAMD,SAXH;AAYE,eAAOb,KAZT;AAaGD,cAAQe,GAAR,CAAY;AAAA;AAAA,YAAEC,WAAF;AAAA,YAAeC,WAAf;;AAAA,eACX;AAAA;AAAA;AACE,mBAAOD,WADT;AAEGC;AAFH,SADW;AAAA,OAAZ;AAbH,KADF;AAsBD,GA3BD;;AA6BA,SAAOzB,UAAU;AACf0B,YAAQ,uBAAO;AACb,iBAAW,gCADE;AAEb,aAAO,0DAFM;AAGb,eAAS,MAHI;AAIb,qBAAe,0KAJF;AAKb,cAAQ,QALK;AAMb,oBAAc;AACZ,cAAM;AACJ,mBAAS,YADL;AAEJ,yBAAe,qEAFX;AAGJ,kBAAQ,QAHJ;AAIJ,qBAAW;AAJP,SADM;AAOZ,gBAAQ;AACN,mBAAS,QADH;AAEN,qBAAW;AAFL,SAPI;AAWZ,mBAAW;AACT,mBAAS,SADA;AAET,yBAAe,yDAFN;AAGT,kBAAQ,QAHC;AAIT,qBAAW,EAJF;AAKT,wBAAc;AACZ,uBAAW;AACT,uBAAS,SADA;AAET,6BAAe,uFAFN;AAGT,yBAAW,EAHF;AAIT,sBAAQ;AAJC;AADC;AALL,SAXC;AAyBZ,kBAAU;AACR,mBAAS,eADD;AAER,yBAAe,6BAFP;AAGR,kBAAQ,QAHA;AAIR,qBAAW,EAJH;AAKR,wBAAc;AACZ,qBAAS;AACP,uBAAS,OADF;AAEP,6BAAe,mDAFR;AAGP,yBAAW,EAHJ;AAIP,sBAAQ;AAJD;AADG;AALN;AAzBE;AAND,KAAP;AADO,GAAV,EAgDJzB,eAhDI,CAAP;AAiDD","file":"select.js","sourcesContent":["import React from 'react';\nimport { fromJS } from 'immutable';\n\nexport default function makeSelectPresenter(presenter) {\n  const SelectPresenter = ({ config, mapData, calc, setCellValues }) => {\n    const valueCell = config.get('value');\n    const options = mapData.get('options', []);\n    const value = calc.evaluateFormula(valueCell);\n\n    return (\n      <select\n        onChange={(evt) => {\n          const cellRef = CellRef.fromA1Ref(valueCell)\n          const cell = sheet.getCell(cellRef);\n          const format = cell && cell.get('format');\n          setCellValues(new Map([\n            [\n              cellRef,\n              format ? format.fromUserEnteredValue(evt.target.value) : newVal\n            ]\n          ]))\n        }}\n        value={value}>\n        {options.map(([optionValue, optionLabel]) => (\n          <option\n            value={optionValue}>\n            {optionLabel}\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  return presenter({\n    schema: fromJS({\n      \"$schema\": \"http://json-schema.org/schema#\",\n      \"$id\": \"http://sheetyapp.com/schemas/core-presenters/select.json\",\n      \"title\": \"Text\",\n      \"description\": \"The Select Presenter allows you to show users a dropdown with options populated from your spreadsheet and a selected value that is synced to a cell in your spreadsheet.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Identifier\",\n          \"description\": \"A unique identifier for this presenter.  Used for analytics events.\",\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"type\": {\n          \"const\": \"select\",\n          \"default\": \"select\"\n        },\n        \"mapData\": {\n          \"title\": \"Options\",\n          \"description\": \"Formulas that will be evaluated against the spreadsheet\",\n          \"type\": \"object\",\n          \"default\": {},\n          \"properties\": {\n            \"options\": {\n              \"title\": \"Options\",\n              \"description\": \"The result of this formula should be a 2-dimensional values and corresponding labels.\",\n              \"default\": \"\",\n              \"$ref\": \"http://sheetyapp.com/schemas/core-presenters/configurers/formula.json\"\n            }\n          }\n        },\n        \"config\": {\n          \"title\": \"Configuration\",\n          \"description\": \"Pre-specified configuration\",\n          \"type\": \"object\",\n          \"default\": {},\n          \"properties\": {\n            \"value\": {\n              \"title\": \"Value\",\n              \"description\": \"The cell to read and write the selected value to.\",\n              \"default\": \"\",\n              \"$ref\": \"http://sheetyapp.com/schemas/core-presenters/configurers/formula.json\"\n            }\n          }\n        }\n      }\n    })\n  })(SelectPresenter);\n}\n"]}