{"version":3,"sources":["../../src/builder/require-auth.js"],"names":["makeRequireAuthPresenter","presenter","RequireAuthPresenter","props","renderPresenter","config","get","filter","providerConfig","map","schema"],"mappings":";;;;;;;;kBAQwBA,wB;;AARxB;;;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;AAEe,SAASA,wBAAT,CAAkCC,SAAlC,EAA6C;AAAA,MACpDC,oBADoD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAE/C;AAAA,qBAC6B,KAAKC,KADlC;AAAA,YACCC,eADD,UACCA,eADD;AAAA,YACkBC,MADlB,UACkBA,MADlB;;;AAGP,eACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,qBAAM,WADR;AAEGD,4BAAgB,CAAC,QAAD,EAAW,WAAX,CAAhB,EAAyCC,OAAOC,GAAP,CAAW,WAAX,CAAzC;AAFH,WADF;AAKE;AAAA;AAAA;AACE,qBAAM,eADR;AAEGD,mBAAOC,GAAP,CAAW,eAAX,IAA8BF,gBAAgB,CAAC,QAAD,EAAW,eAAX,CAAhB,EAA6CC,OAAOC,GAAP,CAAW,eAAX,CAA7C,CAA9B,GAA0G,IAF7G;AAGGD,mBAAOC,GAAP,CAAW,WAAX,EAAwB,qBAAxB,EACOC,MADP,CACc;AAAA,qBAAkB,CAAC,CAACC,cAApB;AAAA,aADd,EAEOC,GAFP,CAEW;AAAA,qBACH;AAAA;AAAA;AAAA;AAAiBD,+BAAeF,GAAf,CAAmB,UAAnB,CAAjB;AAAA;AAAA,eADG;AAAA,aAFX;AAHH;AALF,SADF;AAiBD;AAtBuD;;AAAA;AAAA;;AAuBzD;;AAED,SAAOL,UAAU;AACfS,YAAQ,uBAAO;AACb,iBAAW,gCADE;AAEb,aAAO,gEAFM;AAGb,eAAS,wBAHI;AAIb,qBAAe,0FAJF;AAKb,cAAQ,QALK;AAMb,oBAAc;AACZ,cAAM;AACJ,mBAAS,YADL;AAEJ,yBAAe,qEAFX;AAGJ,kBAAQ,QAHJ;AAIJ,qBAAW;AAJP,SADM;AAOZ,gBAAQ;AACN,mBAAS,cADH;AAEN,qBAAW;AAFL,SAPI;AAWZ,kBAAU;AACR,mBAAS,eADD;AAER,yBAAe,6BAFP;AAGR,kBAAQ,QAHA;AAIR,qBAAW,EAJH;AAKR,wBAAc;AACZ,yBAAa;AACX,uBAAS,WADE;AAEX,6BAAe,+DAFJ;AAGX,sBAAQ;AAHG,aADD;AAMZ,wBAAY;AACV,uBAAS,WADC;AAEV,6BAAe,oCAFL;AAGV,sBAAQ,SAHE;AAIV,yBAAW;AAJD,aANA;AAYZ,6BAAiB;AACf,uBAAS,iBADM;AAEf,6BAAe,2CAFA;AAGf,sBAAQ;AAHO,aAZL;AAiBZ,yBAAa;AACX,uBAAS,kBADE;AAEX,sBAAQ,OAFG;AAGX,yBAAW,EAHA;AAIX,uBAAS;AACP,yBAAS,iBADF;AAEP,wBAAQ,QAFD;AAGP,2BAAW,EAHJ;AAIP,8BAAc;AACZ,8BAAY;AACV,6BAAS,UADC;AAEV,4BAAQ,QAFE;AAGV,4BAAQ,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,QAAlC,EAA4C,OAA5C;AAHE;AADA;AAJP;AAJE;AAjBD;AALN;AAXE;AAND,KAAP;AADO,GAAV,EA6DJR,oBA7DI,CAAP;AA8DD","file":"require-auth.js","sourcesContent":["import React, { Component } from 'react';\nimport { fromJS, List } from 'immutable';\nimport { Tabs, Tab } from 'material-ui/Tabs';\nimport firebaseui from 'firebaseui';\nimport uuid from 'uuid';\n\nimport 'firebaseui/dist/firebaseui.css';\n\nexport default function makeRequireAuthPresenter(presenter) {\n  class RequireAuthPresenter extends Component {\n    render() {\n      const { renderPresenter, config } = this.props;\n\n      return (\n        <Tabs>\n          <Tab\n            label=\"Logged in\">\n            {renderPresenter(['config', 'presenter'], config.get('presenter'))}\n          </Tab>\n          <Tab\n            label=\"Not logged in\">\n            {config.get('signInContent') ? renderPresenter(['config', 'signInContent'], config.get('signInContent')) : null}\n            {config.get('providers', new List())\n                   .filter(providerConfig => !!providerConfig)\n                   .map(providerConfig => (\n                     <p>Sign in with {providerConfig.get('provider')}.</p>\n                   ))}\n          </Tab>\n        </Tabs>\n      );\n    }\n  };\n\n  return presenter({\n    schema: fromJS({\n      \"$schema\": \"http://json-schema.org/schema#\",\n      \"$id\": \"http://sheetyapp.com/schemas/core-presenters/require-auth.json\",\n      \"title\": \"Require Authentication\",\n      \"description\": \"Shows an authentication prompt if not logged in; shows the provided presenter otherwise.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Identifier\",\n          \"description\": \"A unique identifier for this presenter.  Used for analytics events.\",\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"type\": {\n          \"const\": \"require-auth\",\n          \"default\": \"require-auth\"\n        },\n        \"config\": {\n          \"title\": \"Configuration\",\n          \"description\": \"Pre-specified configuration\",\n          \"type\": \"object\",\n          \"default\": {},\n          \"properties\": {\n            \"presenter\": {\n              \"title\": \"Presenter\",\n              \"description\": \"The presenter to render if the user is already authenticated.\",\n              \"$ref\": \"http://sheetyapp.com/schemas/core-presenters/configurers/presenter.json\"\n            },\n            \"usePopup\": {\n              \"title\": \"Use popup\",\n              \"description\": \"Should we use a popup for sign in?\",\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"signInContent\": {\n              \"title\": \"Sign in content\",\n              \"description\": \"The presenter to render above the sign in\",\n              \"$ref\": \"http://sheetyapp.com/schemas/core-presenters/configurers/presenter.json\"\n            },\n            \"providers\": {\n              \"title\": \"Log in providers\",\n              \"type\": \"array\",\n              \"default\": [],\n              \"items\": {\n                \"title\": \"Log in provider\",\n                \"type\": \"object\",\n                \"default\": {},\n                \"properties\": {\n                  \"provider\": {\n                    \"title\": \"Provider\",\n                    \"type\": \"string\",\n                    \"enum\": [\"google\", \"facebook\", \"twitter\", \"github\", \"email\"]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }),\n  })(RequireAuthPresenter);\n}\n"]}