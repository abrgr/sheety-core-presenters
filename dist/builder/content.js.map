{"version":3,"sources":["../../src/builder/content.js"],"names":["makeContentPresenter","presenter","ContentPresenter","mapData","isEditing","encoders","decoders","onUpdate","path","content","get","sanitizedContent","sanitize","uriRewriter","bind","__html","uri","schema"],"mappings":";;;;;kBAKwBA,oB;;AALxB;;;;AACA;;AACA;;;;AACA;;;;;;AAEe,SAASA,oBAAT,CAA8BC,SAA9B,EAAyC;AACtD,MAAMC,mBAAmB,SAAnBA,gBAAmB,OAOnB;AAAA,QANJC,OAMI,QANJA,OAMI;AAAA,QALJC,SAKI,QALJA,SAKI;AAAA,QAJJC,QAII,QAJJA,QAII;AAAA,QAHJC,QAGI,QAHJA,QAGI;AAAA,QAFJC,QAEI,QAFJA,QAEI;AAAA,QADJC,IACI,QADJA,IACI;;AACJ,QAAMC,UAAUN,QAAQO,GAAR,CAAY,SAAZ,CAAhB;AACA,QAAMC,mBAAmB,oBAAUC,QAAV,CAAmBH,OAAnB,EAA4BI,WAA5B,CAAzB;;AAEA,QAAKT,SAAL,EAAiB;AACf,aACE;AACE,eAAOK,OADT;AAEE,kBAAUJ,QAFZ;AAGE,kBAAUC,QAHZ;AAIE,kBAAUC,SAASO,IAAT,CAAc,IAAd,EAAoB,CAAC,SAAD,EAAY,SAAZ,CAApB,CAJZ,GADF;AAOD;;AAED,WACE;AAAA;AAAA;AACE,mBAAU,SADZ;AAEE;AACE,mBAAU,WADZ;AAEE,iCAAyB,EAACC,QAAQJ,gBAAT,EAF3B;AAFF,KADF;AAQD,GA7BD;;AA+BA,WAASE,WAAT,CAAqBG,GAArB,EAA0B;AACxB,WAAOA,GAAP,CADwB,CACZ;AACb;;AAED,SAAOf,UAAU;AACfgB,YAAQ,uBAAO;AACb,iBAAW,gCADE;AAEb,aAAO,2DAFM;AAGb,eAAS,SAHI;AAIb,qBAAe,8FAJF;AAKb,cAAQ,QALK;AAMb,oBAAc;AACZ,cAAM;AACJ,mBAAS,YADL;AAEJ,yBAAe,qEAFX;AAGJ,kBAAQ,QAHJ;AAIJ,qBAAW;AAJP,SADM;AAOZ,gBAAQ;AACN,mBAAS,SADH;AAEN,qBAAW;AAFL,SAPI;AAWZ,mBAAW;AACT,mBAAS,eADA;AAET,yBAAe,8IAFN;AAGT,kBAAQ,QAHC;AAIT,qBAAW,EAJF;AAKT,wBAAc;AACZ,uBAAW;AACT,uBAAS,SADA;AAET,6BAAe,cAFN;AAGT,yBAAW,EAHF;AAIT,sCAAwB,IAJf;AAKT,sBAAQ;AALC;AADC;AALL;AAXC;AAND,KAAP;AADO,GAAV,EAmCJf,gBAnCI,CAAP;AAoCD","file":"content.js","sourcesContent":["import React from 'react';\nimport { fromJS } from 'immutable';\nimport sanitizer from '../sanitizer';\nimport ContentConfigurer from '../configurer/content';\n\nexport default function makeContentPresenter(presenter) {\n  const ContentPresenter = ({\n    mapData,\n    isEditing,\n    encoders,\n    decoders,\n    onUpdate,\n    path\n  }) => {\n    const content = mapData.get('content');\n    const sanitizedContent = sanitizer.sanitize(content, uriRewriter);\n\n    if ( isEditing ) {\n      return (\n        <ContentConfigurer\n          value={content}\n          encoders={encoders}\n          decoders={decoders}\n          onUpdate={onUpdate.bind(null, ['mapData', 'content'])} />\n      );\n    }\n\n    return (\n      <div\n        className='ql-snow'>\n        <div\n          className='ql-editor'\n          dangerouslySetInnerHTML={{__html: sanitizedContent}} />\n      </div>\n    );\n  };\n\n  function uriRewriter(uri) {\n    return uri; // TODO: apply some whitelisting, etc.\n  }\n\n  return presenter({\n    schema: fromJS({\n      \"$schema\": \"http://json-schema.org/schema#\",\n      \"$id\": \"http://sheetyapp.com/schemas/core-presenters/content.json\",\n      \"title\": \"Content\",\n      \"description\": \"The Content presenter allows you to embed rich text, images, and video into your Sheety App.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"title\": \"Identifier\",\n          \"description\": \"A unique identifier for this presenter.  Used for analytics events.\",\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"type\": {\n          \"const\": \"content\",\n          \"default\": \"content\"\n        },\n        \"mapData\": {\n          \"title\": \"Configuration\",\n          \"description\": \"Pre-set values and formulas that will be evaluated against the spreadsheet that will determine the appearance and behavior of this presenter\",\n          \"type\": \"object\",\n          \"default\": {},\n          \"properties\": {\n            \"content\": {\n              \"title\": \"Content\",\n              \"description\": \"Rich content\",\n              \"default\": \"\",\n              \"internallyConfigured\": true,\n              \"$ref\": \"http://sheetyapp.com/schemas/core-presenters/configurers/content.json\"\n            }\n          }\n        }\n      }\n    })\n  })(ContentPresenter);\n}\n"]}